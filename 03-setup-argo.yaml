apiVersion: v1
data:
  ssh_known_hosts: |
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
    ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-ssh-known-hosts-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-ssh-known-hosts-cm
  namespace: argocd
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cm
  namespace: argocd
data:
  resource.customizations.health.bitnami.com_SealedSecret: |
    hs = {}
    hs.status = "Healthy"
    hs.message = "Controller doesn't report resource status"
    return hs
  url: "https://argocd.k8s.frontenac.tech"
  accounts.noah: apiKey, login
  accounts.noah.enabled: "true"
  repository.credentials: |
    - url: git@github.com:Frontenac-Technology-Services
      sshPrivateKeySecret:
        name: fts-ssh-github-creds
        key: sshPrivateKey
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-rbac-cm
  namespace: argocd
data:
  policy.default: role:admin
---
# Create MetalLB Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-metallb
  namespace: ingress-nginx
  annotations:
    metallb.universe.tf/address-pool: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  selector:
    app: ingress-nginx
  type: LoadBalancer
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.129.2
---
# General ArgoCD Access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"  # Fixes infinite 307 redirects
    cert-manager.io/cluster-issuer: letsencrypt-prod # Generate a letsencrypt cert when cert-manager becomes available
    nginx.ingress.kubernetes.io/whitelist-source-range: "192.168.0.0/16" # Forbid access from external networks
spec:
  rules:
  - host: argocd.k8s.frontenac.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port: 
              name: https
  tls:
  - hosts:
    - argocd.k8s.frontenac.tech
    secretName: argocd-secret
---
# Github Webhook ArgoCD Access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-webhook-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"  # Fixes infinite 307 redirects
    cert-manager.io/cluster-issuer: letsencrypt-prod # Generate a letsencrypt cert when cert-manager becomes available
    nginx.ingress.kubernetes.io/server-snippet: | # Forbid access from anything without a "X-Hub-Signature" header
      if ($http_x_hub_signature = "") { return 403; }
spec:
  rules:
  - host: argocd-webhook.k8s.frontenac.tech
    http:
      paths:
      - path: /api/webhook
        pathType: Exact
        backend:
          service:
            name: argocd-server
            port: 
              name: https
  tls:
  - hosts:
    - argocd-webhook.k8s.frontenac.tech
    secretName: argocd-secret
---
# ArgoCD Webhook Sealed Secret https://argo-cd.readthedocs.io/en/stable/operator-manual/webhook/
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: webhook-secret
  namespace: argocd
spec:
  encryptedData:
    webhook.github.secret: AgAtjIeKUD3OjFFsInqfVVta7E+xnfhq5CzCcFQkD+ELr4+8zP6OTexwL4xbCCkC5KKh7Yr3jSm72AqbFJuU52dF6copwnFTLpnP9RRC4KqA1h2AADbxSLN4yicNjeK6Qlub3Ymb+SI0YHAB1xIGQXBOVOphC4NFXGJiI2F1FKQIswe8XYsDgM1KLbxT6yGK2wRX79+FA8o9aHyfQldBZOEpfba7x79AaIetZMqYO6WN+jLs8dI90fGSgSvwrkEgVEunpGJuRKAtz6oNShhDshHAujoNaiMqX33/FMQHtt4JmMTlJLOKfHMI2Cw98dTI+iUbBkqgp4adbX0i66K5G0GnDPqVR1g4178R6Ksh14W6YqeD2MdV9RgUxJM48bisUIc7pqN6/EqzrP0YS207wLU1A4pIF2YGGkm28FJx0CLiAcFBLOMROcvMpp17cRm7vJbMvECefV40P2702rjOPTQ4Y5BxLK/14RhZuxFLQ1DoH5i108iO0TaP8hhR0bWugCGmoFQhfEhudtFJd8FaYMBhoJWrhJHuG/sVP4VGGzldOEYBp9XpzARYKgQajrcdVwud3mqBF7qQ8YM6t+O7yU/G0o00Wlqf4Pcb7sr8MfN8/luUg5lSZpXN71133fDCwj8MpYgYreREQNxwX7Qte7i3uagrIlsx9WZdrob8IVyFkgBZwPSEXmLoR8Mk8YdA08a7/JtLl3ox4UMOOYle4ZeIwUvRXbsZQs+0+ADZ5RH7OehYEwqajQtlWDykemTnJU3pLGjXHmnxJ7HNrYd5L03YJASOe2Q0N0L3ZB3fF8uLMGe3t8i52FWbULJcPl8M53JQyvLrv1Se+88cMeEmuTntqZ7tdLg6PA1k8GyEgL1lGg==
  template:
    data: null
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
      creationTimestamp: null
      name: webhook-secret
      namespace: argocd
---
# ArgoCD Github Credentials
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  creationTimestamp: null
  name: fts-ssh-github-creds
  namespace: argocd
spec:
  encryptedData:
    sshPrivateKey: AgB2tWGE6WpLcCGMjrPVo+f4dyqTdEpYT4r7ioBkRbQkatnjW1Z+YqtL++vJKk+0TaCkHvxK/ZLbgfcpqr0QgGZtEKq8D4albN9bbGVLk2xXd5qu4d4Vpz1vuvyQS67znN9s82wINGnzkvhVWqAvwr2/kTEIiic/F/3kxcoG+/zR4Auqmg+CCyTVv44bh+lX9suD9H2RVCiziX0HTfFS1iAvI1ch2amfBxWx1kRLE/NG+efy7i8KPRSAJyVhZ/AMZgyEvoasGfaUlfUrpn2BusXm1rlSTQhX16fOW6g3emS7+Za2K5P/CQJxGxjLrC+uUFzqyD83oPTG3OcGOVXNlEv9VadCOsLRkpqzFJW4/SBbYWLvr8zHR/+CccNmjbCpri+wyxL9/3aJf2c598zCmthy9JYAeHE4SxEElQXYoPozy40i7o+mt8tng4JnBVfhqUk6nBlW2LU54Kg6Th40+rM/neHNfiaG+cR6WU8766Qq6YNQKrP+o4BvFRo+Mf3cKbP8BHVB5qkbHTE13+A6qlHjzIVwa7wvlfTJu2KRcG9ovPp2rN86j03YiXQN2tCTT6Kdx7WnMAcyRBZY0rSKAeonS+k5J59FiCflTSossrU0lVNldt2i7fah5i/pgovrAPinhkfVznydS7jpA4pf2OK8VPeMEib1o/cKgvk6jwtA4qalc71bpFWOALoGEbHaOR8Epp5i02JLsel68oj+fJvJEyN7Ll9m2H8XuhMyiS48tBV14hXd5WB9nIg7FXoroJpICB0MVK95f6tZ2ZQm7KNcyzfRGdmzxRP7aPho9JKe/u5KnnSWeZElY2O8ZOZFDuAAQknY/+fyukU4D2rEkzSPPZeufz2m1Nu7uWwLtGkU0WStdhrBXxGzo/czwzD9F49R8uSY0a/lWKvxHS2iGltv2egt+OuQHJ5ea68o3CCYXqm7nmg/VqawrCM7PHWGdenF2iO0uP25faoh2vJe+dsRqLS5whZWkJN7vPi2xejfDFHhMakem2aEKOoNmvmGxcjEKN/4FCU58yVKa9xIUpGwRBvO7z4vKbteg6eMT2HgWhOweNx/nOSsj3NFpHjpZAEJsIKgmRiKHeKzx82/CpeOgeHDH0ihM62scOl65XhOGwSZY5mjQ4ESnEY98CT+X7m9fj9FpxY4PA9oNVoZEhrPtlML0FStHJ61Y/NEo2FGy4pFZyoflSRd1oAWAXEzF3G5HLe1N7nchQz23RJ2QNQ=
  template:
    data: null
    metadata:
      annotations:
        sealedsecrets.bitnami.com/cluster-wide: "true"
      creationTimestamp: null
      labels:
      name: fts-ssh-github-creds
      namespace: argocd
    type: Opaque
---
# Bootstrap Application
# Create ArgoCD bootstrap application (App of Apps)
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bootstrap
  namespace: argocd
spec:
  project: default
  syncPolicy:
    automated: {} # Keep all of the resources this project deploys in-sync automatically
  source:
    repoURL: git@github.com:Frontenac-Technology-Services/k8s-configs.git
    targetRevision: master # Use the master branch
    path: argo # Deploy argo resources from the /argo path
    # Deploy project and application type resources as raw kubernetes manifests from the source path recursively
    directory:
      recurse: true
  # Deploy to the local ArgoCD Cluster in the argocd namespace
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
